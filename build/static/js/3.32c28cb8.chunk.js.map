{"version":3,"sources":["../node_modules/trashable/lib/index.js","pages/quotations/subpage/calendar/style.module.scss","pages/quotations/subpage/calendar/index.js"],"names":["module","exports","promise","trash","wrappedPromise","Promise","resolve","reject","then","val","error","flexWrap","Calendar","loadPlugin","url","pluginConfig","script","document","createElement","type","readyState","onreadystatechange","onload","onerror","innerHTML","src","getElementById","appendChild","react__WEBPACK_IMPORTED_MODULE_5___default","a","className","styles","id","style","background","result","this","trashablePromise","makeTrashable","console","log","catch","ex","PureComponent","connect","state","dispatch"],"mappings":"0FAqBAA,EAAAC,QAnBA,SAAAC,GACA,IAAAC,EAAA,aAEAC,EAAA,IAAAC,QAAA,SAAAC,EAAAC,GACAJ,EAAA,WACAG,EAAA,KACAC,EAAA,MAGAL,EAAAM,KAAA,SAAAC,GACAH,KAAAG,IACK,SAAAC,GACLH,KAAAG,OAIA,OADAN,EAAAD,QACAC,wBCjBAJ,EAAAC,QAAA,CAAkBU,SAAA,0KCaZC,6MA+BJC,WAAa,SAACC,EAAKC,GA0BjB,OAzBgB,IAAIV,QAAQ,SAASC,EAASC,GAC5C,IAAIS,EAASC,SAASC,cAAc,UACpCF,EAAOG,KAAO,kBACXH,EAAOI,WACNJ,EAAOK,mBAAmB,WAEG,WAAtBL,EAAOI,YAAiD,aAAtBJ,EAAOI,aACxCJ,EAAOK,mBAAmB,KAC1Bf,EAAQU,KAKhBA,EAAOM,OAAO,WACZhB,EAAQU,IAIdA,EAAOO,QAAU,WACfhB,EAAO,yCAETS,EAAOQ,UAAYT,EACnBC,EAAOS,IAAMX,EACbG,SAASS,eAAe,oBAAoBC,YAAYX,8EAlD1D,OACEY,EAAAC,EAAAX,cAAA,OAAKY,UAAWC,IAAOpB,UACnBiB,EAAAC,EAAAX,cAAA,OAAKY,UAAU,+BAA+BE,GAAG,mBAAmBC,MAAO,CAACC,WAAY,YACpFN,EAAAC,EAAAX,cAAA,OAAKY,UAAU,uFAOzB,IAAIK,EAASC,KAAKvB,WAAW,uEAvBpB,uGAwBTuB,KAAKC,iBAAmBC,IAAcH,GACtCC,KAAKC,iBAAiB7B,KAAK,SAASQ,GAClCuB,QAAQC,IAAI,aACXC,MAAM,SAASC,GAChBH,QAAQC,IAAIE,oDAKdN,KAAKC,iBAAiBlC,eAzBHwC,iBA0ERC,sBAPE,SAAAC,GAAK,MAAK,IAGP,SAAAC,GAAQ,MAAK,IAIlBF,CAGbhC","file":"static/js/3.32c28cb8.chunk.js","sourcesContent":["\"use strict\";\n\nfunction makeTrashable(promise) {\n  var trash = function trash() {};\n\n  var wrappedPromise = new Promise(function (resolve, reject) {\n    trash = function trash() {\n      resolve = null;\n      reject = null;\n    };\n\n    promise.then(function (val) {\n      if (resolve) resolve(val);\n    }, function (error) {\n      if (reject) reject(error);\n    });\n  });\n  wrappedPromise.trash = trash;\n  return wrappedPromise;\n}\n\nmodule.exports = makeTrashable;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"flexWrap\":\"style_flexWrap__2W96R\"};","import React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport makeTrashable from 'trashable';\nimport styles from './style.module.scss'\n\n\nconst strJson=`{\n  \"width\": \"100%\",\n  \"height\": \"100%\",\n  \"locale\": \"zh_CN\",\n  \"importanceFilter\": \"-1,0,1\"\n}`;\n\n\nclass Calendar extends PureComponent {\n\n  \n\n  render() {\n    return (\n      <div className={styles.flexWrap}>\n          <div className=\"tradingview-widget-container\" id=\"tradingview_wrap\" style={{background: '#ffffff'}}>\n              <div className=\"tradingview-widget-container__widget\" />\n          </div>\n      </div>\n    );\n  }\n\n  componentDidMount() {\n    let result = this.loadPlugin(\"https://s3.tradingview.com/external-embedding/embed-widget-events.js\", strJson)\n    this.trashablePromise = makeTrashable(result);\n    this.trashablePromise.then(function(script){\n      console.log('success')\n    }).catch(function(ex){\n      console.log(ex)\n    })\n  }\n\n  componentWillUnmount() {\n    this.trashablePromise.trash()\n  }\n  \n\n  \n\n  loadPlugin = (url, pluginConfig) => {\n    const promise = new Promise(function(resolve, reject){\n      var script = document.createElement('script');\n      script.type = 'text/javascript';\n      if(script.readyState){\n          script.onreadystatechange=function(){\n\n              if(script.readyState === \"loaded\" || script.readyState === \"complete\"){\n                  script.onreadystatechange=null;\n                  resolve(script);\n              }\n          }\n\n      }else{\n          script.onload=function(){\n            resolve(script);\n          }\n      }\n      \n      script.onerror = function() {\n        reject('插件加载失败')\n      };\n      script.innerHTML = pluginConfig;\n      script.src = url;\n      document.getElementById('tradingview_wrap').appendChild(script);\n    });\n    return promise\n  }\n\n  \n\n  \n\n\n}\n\nconst mapState = state => ({\n});\n\nconst mapDispatch = dispatch => ({\n\n});\n\nexport default connect(\n  mapState,\n  mapDispatch\n)(Calendar);\n"],"sourceRoot":""}